# coding=utf8
###
 # Created By YanChunGuang
 # 打包一个目录下的所有可选资源，并对其加密
###


# coding=utf8
import os
import zipfile

#文件加密
table_ryption = (
        0x8a, 0x67, 0xf8, 0xe5, 0xec, 0x27, 0x2c, 0x00, 0x92, 0x2e, 0xfa, 0x43, 0xa8, 0xc9, 0x0a, 0xf8,
        0xb1, 0x8e, 0x87, 0x67, 0xe3, 0xdf, 0x8b, 0x93, 0x35, 0x14, 0xf9, 0x91, 0x18, 0x25, 0x36, 0xe9,
        0xd4, 0x6e, 0x0d, 0xab, 0x27, 0xd5, 0xc0, 0x75, 0xa6, 0xb1, 0x10, 0xc8, 0x67, 0x20, 0xe2, 0x45,
        0xa3, 0x6d, 0xda, 0x8f, 0x49, 0x79, 0x07, 0xb2, 0x6d, 0x27, 0x55, 0x35, 0xba, 0x4e, 0x90, 0xef,
        0x27, 0x2c, 0xf7, 0x56, 0x80, 0x08, 0xf6, 0xf0, 0xca, 0xa5, 0x8f, 0xd6, 0x7e, 0x1e, 0xdc, 0x1c,
        0x62, 0xb5, 0x33, 0x7e, 0xea, 0x9c, 0x5e, 0xd4, 0x0f, 0x56, 0x51, 0x34, 0x38, 0xc6, 0x1c, 0x0e,
        0x49, 0x47, 0xbf, 0x91, 0x3d, 0x55, 0x85, 0x97, 0x4e, 0x97, 0x80, 0x39, 0xde, 0x53, 0x4e, 0xb6,
        0x86, 0xee, 0x15, 0x53, 0x07, 0xa2, 0x8d, 0x12, 0x11, 0x98, 0x13, 0x9e, 0x7e, 0xf9, 0x37, 0x96,
        0x03, 0x9a, 0x8e, 0xe4, 0x9c, 0x93, 0xeb, 0xb7, 0x69, 0x33, 0x3f, 0x8c, 0xb5, 0x20, 0x83, 0x9d,
        0xd7, 0xa5, 0xb0, 0x13, 0xf2, 0x01, 0x54, 0x41, 0xb9, 0xb9, 0xdb, 0xf1, 0x47, 0x3e, 0x0f, 0xa7,
        0x72, 0x11, 0x24, 0xac, 0x3c, 0x78, 0xc2, 0x32, 0xa3, 0xf7, 0x01, 0x99, 0x60, 0x8f, 0x9d, 0x41,
        0xc1, 0x6a, 0xd6, 0x2f, 0x5a, 0xc5, 0x9d, 0x4f, 0x88, 0xf3, 0x70, 0xba, 0xfd, 0x0c, 0xad, 0xb7,
        0x7f, 0xc0, 0xd9, 0xb9, 0xe1, 0xf2, 0x32, 0x9b, 0x4d, 0x75, 0x27, 0xac, 0xa0, 0x7d, 0xa1, 0x34,
        0x24, 0xca, 0x65, 0x35, 0x0d, 0xdb, 0x3d, 0x5c, 0xcb, 0x4f, 0x52, 0x49, 0x52, 0xc6, 0xe1, 0x07,
        0xdb, 0x89, 0x2c, 0x7b, 0x5a, 0x6f, 0x33, 0xf6, 0x36, 0xb8, 0x21, 0x77, 0x88, 0x55, 0x0c, 0x67,
        0x22, 0xf4, 0x59, 0x80, 0x21, 0x4a, 0x51, 0x58, 0xe6, 0xd0, 0x4e, 0x69, 0xf4, 0xb7, 0x87, 0xbe,
    )


def encryption(file):
    try:
        targetFile = os.path.split(file)
        targetFile = os.path.join(targetFile[0],  targetFile[1]+'.dat')
        if not os.path.exists(targetFile) or (os.path.exists(targetFile) and (os.path.getsize(targetFile) != os.path.getsize(file))):
            fo = open(file, "rb")
            data_byte = fo.read();
            fo_tar = open(targetFile, "wb+")
            index = 0
            for byte in data_byte:
                temp = ord(byte) ^ table_ryption[index % 256]
                index+=1
                fo_tar.write(chr(temp))

            fo_tar.close()
            fo.close()

        print(targetFile)
    except IOError:
        print('--no find file:%s--' % (file))
        return


#解密
def decryption(file):
    try:
        targetFile = os.path.split(file)
        targetFile = os.path.join(targetFile[0],  targetFile[1]+'.dec')
        if not os.path.exists(targetFile) or (os.path.exists(targetFile) and (os.path.getsize(targetFile) != os.path.getsize(file))):
            fo = open(file, "rb")
            data_byte = fo.read();
            fo_tar = open(targetFile, "wb+")
            index = 0
            for byte in data_byte:
                temp = ord(byte) ^ table_ryption[index % 256]
                index+=1
                fo_tar.write(chr(temp))

            fo_tar.close()
            fo.close()

        print(targetFile)
    except IOError:
        print('--no find file:%s--' % (file))
        return


types = ['png','jpg'];
#检查文件类型
def checkType(type):
    for k, v in enumerate(types):
        if v == type :
            return  True
    return False


print('\n\n-------------------------------------------------------------')
print('encryption......\n')
rootdir = os.getcwd()
file_list = []

#检查文件夹
def checkDir(dir):
    for k, v in enumerate(file_list):
        if v == dir :
            return  True
    return False

for (dirpath, dirnames, filenames) in os.walk(rootdir):
    for filename in filenames:
        if checkType(filename.split(".")[-1]):
            encryption(os.path.join(dirpath, filename))
            if not checkDir(dirpath):
                file_list.append(dirpath)
            file_list.append(os.path.join(dirpath, filename+'.dat'))

print('encryption end')

print('zip......')
z = zipfile.ZipFile(os.path.join(rootdir, 'data.dat'), mode='w')
for file in file_list:
    z.write(file,file.split(rootdir+'/')[-1])
    if os.path.isfile(file):
        os.remove(file)
        print(file)
    else:
        print(file)

print('zip end')